#Autogenerated by ReportLab guiedit do not edit
from reportlab.graphics.shapes import _DrawingEditorMixin, Drawing, Group, Line, String, PolyLine
from reportlab.lib.colors import Color, CMYKColor, PCMYKColor
from rlextra.graphics.canvasadapter import DirectDrawFlowable

class ExplodedDrawing_Drawing(_DrawingEditorMixin,Drawing):
	def __init__(self,width=400,height=200,*args,**kw):
		Drawing.__init__(self,width,height,*args,**kw)
		self.transform = (1,0,0,1,0,0)
		self.add(Line(40,30,220,30,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=0,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(74.54545,30,74.54545,25,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(110.9091,30,110.9091,25,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(147.2727,30,147.2727,25,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(183.6364,30,183.6364,25,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(220,30,220,25,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,74.54545,25)
		v0.add(String(-7.5,-10,'200',textAnchor='start',fontName='Times-Roman',fontSize=10,fillColor=Color(0,0,0,1)))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,110.9091,25)
		v0.add(String(-7.5,-10,'400',textAnchor='start',fontName='Times-Roman',fontSize=10,fillColor=Color(0,0,0,1)))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,147.2727,25)
		v0.add(String(-7.5,-10,'600',textAnchor='start',fontName='Times-Roman',fontSize=10,fillColor=Color(0,0,0,1)))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,183.6364,25)
		v0.add(String(-7.5,-10,'800',textAnchor='start',fontName='Times-Roman',fontSize=10,fillColor=Color(0,0,0,1)))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,220,25)
		v0.add(String(-10,-10,'1000',textAnchor='start',fontName='Times-Roman',fontSize=10,fillColor=Color(0,0,0,1)))
		self.add(Line(40,30,40,115,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=0,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(40,34.59459,35,34.59459,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(40,57.56757,35,57.56757,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(40,80.54054,35,80.54054,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		self.add(Line(40,103.5135,35,103.5135,strokeColor=Color(0,0,0,1),strokeWidth=1,strokeLineCap=0,strokeLineJoin=0,strokeMiterLimit=10,strokeDashArray=None,strokeOpacity=None))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,35,34.59459)
		v1=v0._nn(Group())
		v1.transform = (1,0,0,1,-14,-6)
		v1.add(DirectDrawFlowable(XPreformatted(
'caseSensitive': 1
'text': '10<sup>2</sup>'
'frags': [ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='2', textColor=Color(0,0,0,1), us_lines=[])]
'style': <ParagraphStyle 'xlabel-generated'>
'bulletText': None
'debug': 0
'width': 2147483647
'_wrapWidths': [2147483647, 2147483647]
'_width_max': 14.0
'height': 12.0
'blPara': ParaLines(kind=1, lines=[ParaLines(ascent=6.83, currentWidth=14.0, descent=-2.17, extraSpace=2147483633.0, fontSize=10, preformatted=True, wordCount=0, words=[ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='2', textColor=Color(0,0,0,1), us_lines=[])])])
) #XPreformatted))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,35,57.56757)
		v1=v0._nn(Group())
		v1.transform = (1,0,0,1,-14,-6)
		v1.add(DirectDrawFlowable(XPreformatted(
'caseSensitive': 1
'text': '10<sup>4</sup>'
'frags': [ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='4', textColor=Color(0,0,0,1), us_lines=[])]
'style': <ParagraphStyle 'xlabel-generated'>
'bulletText': None
'debug': 0
'width': 2147483647
'_wrapWidths': [2147483647, 2147483647]
'_width_max': 14.0
'height': 12.0
'blPara': ParaLines(kind=1, lines=[ParaLines(ascent=6.83, currentWidth=14.0, descent=-2.17, extraSpace=2147483633.0, fontSize=10, preformatted=True, wordCount=0, words=[ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='4', textColor=Color(0,0,0,1), us_lines=[])])])
) #XPreformatted))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,35,80.54054)
		v1=v0._nn(Group())
		v1.transform = (1,0,0,1,-14,-6)
		v1.add(DirectDrawFlowable(XPreformatted(
'caseSensitive': 1
'text': '10<sup>6</sup>'
'frags': [ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='6', textColor=Color(0,0,0,1), us_lines=[])]
'style': <ParagraphStyle 'xlabel-generated'>
'bulletText': None
'debug': 0
'width': 2147483647
'_wrapWidths': [2147483647, 2147483647]
'_width_max': 14.0
'height': 12.0
'blPara': ParaLines(kind=1, lines=[ParaLines(ascent=6.83, currentWidth=14.0, descent=-2.17, extraSpace=2147483633.0, fontSize=10, preformatted=True, wordCount=0, words=[ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='6', textColor=Color(0,0,0,1), us_lines=[])])])
) #XPreformatted))
		v0=self._nn(Group())
		v0.transform = (1,0,0,1,35,103.5135)
		v1=v0._nn(Group())
		v1.transform = (1,0,0,1,-14,-6)
		v1.add(DirectDrawFlowable(XPreformatted(
'caseSensitive': 1
'text': '10<sup>8</sup>'
'frags': [ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='8', textColor=Color(0,0,0,1), us_lines=[])]
'style': <ParagraphStyle 'xlabel-generated'>
'bulletText': None
'debug': 0
'width': 2147483647
'_wrapWidths': [2147483647, 2147483647]
'_width_max': 14.0
'height': 12.0
'blPara': ParaLines(kind=1, lines=[ParaLines(ascent=6.83, currentWidth=14.0, descent=-2.17, extraSpace=2147483633.0, fontSize=10, preformatted=True, wordCount=0, words=[ParaFrag(__tag__='para', bold=0, fontName='Times-Roman', fontSize=10, greek=0, italic=0, link=[], rise=0, text='10', textColor=Color(0,0,0,1), us_lines=[]), ParaFrag(__tag__='super', bold=0, fontName='Times-Roman', fontSize=8, greek=0, italic=0, link=[], rise=5.0, text='8', textColor=Color(0,0,0,1), us_lines=[])])])
) #XPreformatted))
		self.add(PolyLine(points=[40,34.59459,41.81818,41.51015,43.63636,45.55549,45.45455,48.4257,47.27273,50.65201,49.09091,52.47104,50.90909,54.00901,52.72727,55.34126,54.54545,56.51638,56.36364,57.56757,58.18182,58.51848,60,59.3866,61.81818,60.18519,63.63636,60.92456,65.45455,61.61291,67.27273,62.25681,69.09091,62.86166,70.90909,63.43194,72.72727,63.97137,74.54545,64.48312,76.36364,64.9699,78.18182,65.43403,80,65.87753,81.81818,66.30215,83.63636,66.70943,85.45455,67.10074,87.27273,67.47728,89.09091,67.84012,90.90909,68.19022,92.72727,68.52846,94.54545,68.85561,96.36364,69.17236,98.18182,69.47937,100,69.77722,101.8182,70.06643,103.6364,70.34749,105.4545,70.62085,107.2727,70.88692,109.0909,71.14608,110.9091,71.39868,112.7273,71.64503,114.5455,71.88546,116.3636,72.12022,118.1818,72.34959,120,72.5738,121.8182,72.79309,123.6364,73.00765,125.4545,73.2177,127.2727,73.42342,129.0909,73.62499,130.9091,73.82256,132.7273,74.01629,134.5455,74.20634,136.3636,74.39283,138.1818,74.5759,140,74.75567,141.8182,74.93226,143.6364,75.10578,145.4545,75.27633,147.2727,75.44402,149.0909,75.60893,150.9091,75.77116,152.7273,75.9308,154.5455,76.08792,156.3636,76.2426,158.1818,76.39493,160,76.54496,161.8182,76.69277,163.6364,76.83843,165.4545,76.98198,167.2727,77.1235,169.0909,77.26304,170.9091,77.40066,172.7273,77.5364,174.5455,77.67033,176.3636,77.80247,178.1818,77.9329,180,78.06163,181.8182,78.18873,183.6364,78.31423,185.4545,78.43817,187.2727,78.56059,189.0909,78.68152,190.9091,78.80101,192.7273,78.91908,194.5455,79.03578,196.3636,79.15112,198.1818,79.26514,200,79.37788,201.8182,79.48935,203.6364,79.5996,205.4545,79.70864,207.2727,79.8165,209.0909,79.92321,210.9091,80.02879,212.7273,80.13326,214.5455,80.23665,216.3636,80.33898,218.1818,80.44027,220,80.54054],strokeColor=Color(1,0,0,1),strokeWidth=.2,strokeLineCap=0,strokeLineJoin=1,strokeMiterLimit=0,strokeDashArray=None,strokeOpacity=None))
		self.add(PolyLine(points=[40,46.08108,41.81818,56.45441,43.63636,62.52242,45.45455,66.82774,47.27273,70.16721,49.09091,72.89575,50.90909,75.2027,52.72727,77.20107,54.54545,78.96376,56.36364,80.54054,58.18182,81.96691,60,83.26908,61.81818,84.46697,63.63636,85.57603,65.45455,86.60855,67.27273,87.5744,69.09091,88.48169,70.90909,89.33709,72.72727,90.14624,74.54545,90.91387,76.36364,91.64404,78.18182,92.34024,80,93.00549,81.81818,93.64241,83.63636,94.25334,85.45455,94.8403,87.27273,95.4051,89.09091,95.94936,90.90909,96.47453,92.72727,96.98188,94.54545,97.4726,96.36364,97.94774,98.18182,98.40825,100,98.85502,101.8182,99.28883,103.6364,99.71042,105.4545,100.1205,107.2727,100.5196,109.0909,100.9083,110.9091,101.2872,112.7273,101.6567,114.5455,102.0174,116.3636,102.3695,118.1818,102.7136,120,103.0499,121.8182,103.3788,123.6364,103.7007,125.4545,104.0157,127.2727,104.3243,129.0909,104.6267,130.9091,104.923,132.7273,105.2136,134.5455,105.4987,136.3636,105.7784,138.1818,106.053,140,106.3227,141.8182,106.5876,143.6364,106.8479,145.4545,107.1037,147.2727,107.3552,149.0909,107.6026,150.9091,107.8459,152.7273,108.0854,154.5455,108.3211,156.3636,108.5531,158.1818,108.7816,160,109.0066,161.8182,109.2283,163.6364,109.4468,165.4545,109.6622,167.2727,109.8744,169.0909,110.0838,170.9091,110.2902,172.7273,110.4938,174.5455,110.6947,176.3636,110.8929,178.1818,111.0885,180,111.2816,181.8182,111.4723,183.6364,111.6605,185.4545,111.8464,187.2727,112.0301,189.0909,112.2115,190.9091,112.3907,192.7273,112.5678,194.5455,112.7429,196.3636,112.9159,198.1818,113.0869,200,113.256,201.8182,113.4232,203.6364,113.5886,205.4545,113.7521,207.2727,113.9139,209.0909,114.074,210.9091,114.2324,212.7273,114.3891,214.5455,114.5442,216.3636,114.6977,218.1818,114.8496,220,115],strokeColor=Color(0,0,1,1),strokeWidth=.2,strokeLineCap=0,strokeLineJoin=1,strokeMiterLimit=0,strokeDashArray=None,strokeOpacity=None))
		self.add(PolyLine(points=[40,30,41.81818,35.53244,43.63636,38.76871,45.45455,41.06489,47.27273,42.84594,49.09091,44.30116,50.90909,45.53153,52.72727,46.59733,54.54545,47.53743,56.36364,48.37838,58.18182,49.13911,60,49.8336,61.81818,50.47247,63.63636,51.06397,65.45455,51.61465,67.27273,52.12977,69.09091,52.61366,70.90909,53.06987,72.72727,53.50142,74.54545,53.91082,76.36364,54.30025,78.18182,54.67155,80,55.02635,81.81818,55.36604,83.63636,55.69187,85.45455,56.00492,87.27273,56.30614,89.09091,56.59642,90.90909,56.8765,92.72727,57.14709,94.54545,57.40881,96.36364,57.66222,98.18182,57.90782,100,58.1461,101.8182,58.37747,103.6364,58.60232,105.4545,58.821,107.2727,59.03386,109.0909,59.24119,110.9091,59.44326,112.7273,59.64035,114.5455,59.83269,116.3636,60.0205,118.1818,60.204,120,60.38337,121.8182,60.55879,123.6364,60.73045,125.4545,60.89849,127.2727,61.06306,129.0909,61.22431,130.9091,61.38237,132.7273,61.53736,134.5455,61.68939,136.3636,61.83859,138.1818,61.98504,140,62.12886,141.8182,62.27013,143.6364,62.40895,145.4545,62.54539,147.2727,62.67954,149.0909,62.81147,150.9091,62.94125,152.7273,63.06896,154.5455,63.19466,156.3636,63.31841,158.1818,63.44027,160,63.56029,161.8182,63.67854,163.6364,63.79506,165.4545,63.90991,167.2727,64.02313,169.0909,64.13476,170.9091,64.24485,172.7273,64.35345,174.5455,64.46059,176.3636,64.5663,178.1818,64.67064,180,64.77363,181.8182,64.87531,183.6364,64.97571,185.4545,65.07486,187.2727,65.1728,189.0909,65.26954,190.9091,65.36513,192.7273,65.45959,194.5455,65.55294,196.3636,65.64522,198.1818,65.73644,200,65.82663,201.8182,65.91581,203.6364,66.004,205.4545,66.09124,207.2727,66.17752,209.0909,66.26289,210.9091,66.34735,212.7273,66.43093,214.5455,66.51364,216.3636,66.59551,218.1818,66.67654,220,66.75676],strokeColor=Color(0,.501961,0,1),strokeWidth=.2,strokeLineCap=0,strokeLineJoin=1,strokeMiterLimit=0,strokeDashArray=None,strokeOpacity=None))


if __name__=="__main__": #NORUNTESTS
	ExplodedDrawing_Drawing().save(formats=['pdf'],outDir='.',fnRoot=None)
